require(MultiVarSel)
? `MultiVarSel-package`
require(MultiVarSel)
whithening
whitening
?whitening
?glmneyt
?glmnet
whitening2<-whitening
data(copals_camera)
copals = copals_camera[copals_camera$Include == 1, -1]
Y  <- as.matrix(copals[, -(1:2)])
X1 <- copals[,   1]
X2 <- copals[,   2]
rm <- which(is.element(X1,c("1155","1551")))
Y <- Y[-rm, ]
X1 <- X1[-rm]
X1 <- factor(as.character(X1))
X2 <- X2[-rm]
X2 <- factor(as.character(X2))
X <- model.matrix(lm(Y ~ X2 + 0))
Yscaled=scale(Y)
Y=Yscaled[,1:100]
residuals=lm(as.matrix(Y)~X-1)$residuals
n = dim(residuals)[1]
q = dim(residuals)[2]
phi_hat <- sum(diag(crossprod(residuals[, -q], residuals[, -1])))/sum(diag(crossprod(residuals)))
diag <- sqrt(1-phi_hat^2) * phi^(0:(q-2))
diag <- sqrt(1-phi_hat^2) * phi_hat^(0:(q-2))
diags <- lapply(0:(q-1), function(k) {
return(c(phi_hat^k, rep(diag[k+1],q-k-1))/sqrt(1-phi_hat^2))
})
diags
square_root_inv_hat_Sigma <- bandSparse(q, k=0:(q-1),diag=diags)
phi_hat <- sum(diag(crossprod(residuals[, -q], residuals[, -1])))/sum(diag(crossprod(residuals)))
diag <- sqrt(1-phi_hat^2) * phi_hat^(0:(q-2))
diags <- lapply(0:(q-1), function(k) {
return(c(phi_hat^k, rep(diag[k+1],q-k-1))/sqrt(1-phi_hat^2))
})
square_root_inv_hat_Sigma <- bandSparse(q, k=0:(q-1),diag=diags)
square_root_inv_hat_Sigma
image(square_root_inv_hat_Sigma)
d1 <- c(sqrt(1 - phi_hat ^ 2), rep(1, q - 1))
d2 <- c(rep(- phi_hat, q - 1))
square_root_inv_hat_Sigma <- bandSparse(q, k = 0:1, diag = list(d1, d2))
image(square_root_inv_hat_Sigma)
image(whitening2(residuals, typeDep = 'AR1', pAR = 1, qMA = 0))
image(whitening2(residuals, typeDep = 'AR1', pAR = 1, qMA = 0)-square_root_inv_hat_Sigma)
max(whitening2(residuals, typeDep = 'AR1', pAR = 1, qMA = 0)-square_root_inv_hat_Sigma)
square_root_inv_hat_Sigma
whitening2(residuals, typeDep = 'AR1', pAR = 1, qMA = 0)
whitening2
for (i in 1:n) {
phi_hat[i] = arima(residuals[i, ], order = c(1, 0,
0))$coef[1]
}
phi_hat_final = mean(phi_hat)
phi_hat_final
sum(diag(crossprod(residuals[, -q], residuals[, -1])))/sum(diag(crossprod(residuals)))
sum(diag(crossprod(residuals[, -q], residuals[, -1])))/sum(diag(crossprod(residuals[,-q])))
diag(crossprod(residuals[, -q], residuals[, -1])
)
diag(crossprod(residuals[, -q], residuals[, -1])) / diag(crossprod(residuals[,-q])
)
mean(diag(crossprod(residuals[, -q], residuals[, -1])) / diag(crossprod(residuals[,-q])))
phi_hat_final
phi_hat
diag(crossprod(residuals[, -q], residuals[, -1]))
dim(residuals)
sum(diag(crossprod(t(residuals[, -q]), t(residuals[, -1]))))/sum(diag(crossprod(t(residuals[,-q]))))
mean(diag(crossprod(t(residuals[, -q]), t(residuals[, -1]))) / diag(crossprod(t(residuals[,-q])))
)
A <- residuals[1, -q]
b <- residuals[1,-1]
(t(A) %*%b)/t(A)%*%A
phi_hat
t(A)%*%A
(t(A) %*%b)
40.98111/111.3612
t(A)%*%A
sum(A^2)
require(MultiVarSel)
require(MultiVarSel)
data(copals_camera)
copals = copals_camera[copals_camera$Include == 1, -1]
Y  <- as.matrix(copals[, -(1:2)])
X1 <- copals[,   1]
X2 <- copals[,   2]
rm <- which(is.element(X1,c("1155","1551")))
Y <- Y[-rm, ]
X1 <- X1[-rm]
X1 <- factor(as.character(X1))
X2 <- X2[-rm]
X2 <- factor(as.character(X2))
X <- model.matrix(lm(Y ~ X2 + 0))
Yscaled=scale(Y)
Y=Yscaled[,1:100]
residuals=lm(as.matrix(Y)~X-1)$residuals
for (i in 1:n) {
phi_hat[i] = arima(residuals[i, ], order = c(1, 0,
0))$coef[1]
}
phi_hat_final = mean(phi_hat)
A <- residuals[1, -q]
b <- residuals[1,-1]
(t(A) %*%b)/t(A)%*%A
phi_hat[1]
(t(A) %*%b)/(t(A)%*%A)
phi_hat[1]
(t(A) *b)/(t(A)%*%A)
b
t(A)
(A*b)/(t(A)%*%A)
(A*b)
sum(A*b)/(t(A)%*%A)
(t(A) %*%b)/(t(A)%*%A)
raw_data <- read.table(file = '/home/perrot-dockes/Documents/Enviromics/Code/paper_metabolomics/data_copals.csv', sep=';', header=TRUE)
dim(raw_data)
head(raw_data)
raw_data <- read.table(file = '/home/perrot-dockes/Documents/Enviromics/Code/paper_metabolomics/data_copals.csv', header=TRUE)
dim(raw_data)
raw_data <- read.table(file = '/home/perrot-dockes/Documents/Enviromics/Code/paper_metabolomics/data_copals.csv',sep=',', header=TRUE)
dim(raw_data)
head(raw_data)
dim(raw_data)
acf(raw_data[1,])
?Acf
?acf
acf(raw_data[1,],lag.max =30)
require(MultiVarSel)
?whithening_choice
?whitening_choice
?whitening_test
?whitening
?whitening_test
?whitening_choice
?variable_selection
devtools::document()
library(MultiVarSel)
?MultiVarSel
devtools::use_data_raw()
devtools::use_data_raw()
devtools::use_data_raw()
devtools::use_data(Y,Y)
devtools::use_data(Y,X)
devtools::use_data(Y,X,overwrite = TRUE)
data(X.rda)
data(X)
X
X<-NULL
data(X)
X
data(Y)
data("copals_camera")
X
Y
dim(Y)
knitr::opts_chunk$set(echo = TRUE)
variable_selection
require(MultiVarSel)
variable_selection()
variable_selection
source('~/Documents/Multivar_selec/Multivar_selec/MultiVarSel/R/variable_selection.R', echo=TRUE)
source('~/Documents/Multivar_selec/Multivar_selec/MultiVarSel/R/variable_selection.R', echo=TRUE)
devtools::document()
library(MultiVarSel)
source('~/Documents/Multivar_selec/Multivar_selec/MultiVarSel/R/variable_selection.R', echo=TRUE)
require(MultiVarSel)
variable_selection<-NULL
require(MultiVarSel)
variable_selection
?whitening
data(copals_camera)
Y=scale(Y[,1:100])
residuals=lm(as.matrix(Y)~X-1)$residuals
whitening(residuals)
variable_selection
require(MultiVarSel)
variable_selection
?variable_selection
library(MultiVarSel)
devtools::document()
library(MultiVarSel)
data("copals_camera")
group <- X2
group
save(group, Y, "data/copals_camera.RData")
save(group, Y, file="data/copals_camera.RData")
devtools::document()
library(MultiVarSel)
?whitening
data(copals_camera)
Y=scale(Y[,1:100])
residuals=lm(as.matrix(Y)~X-1)$residuals
whitening(residuals, "AR1")
?whitening_choice
data(copals_camera)
Y=scale(Y[,1:100])
residuals=lm(as.matrix(Y)~X-1)$residuals
whitening_choice(residuals,c("AR1","nonparam","ARMA"),
pAR=1,qMA=1)
?whitening_test
data(copals_camera)
Y=scale(Y[,1:100])
residuals=lm(as.matrix(Y)~X-1)$residuals
square_root_inv_hat_Sigma=whitening(residuals,"AR1",
pAR=1,qMA=0)
?variable_selection
Y <- scale(Y[,1:200])
Frequencies <- variable_selection(Y = Y, X = X, nb_repli = 100, typeDep = 'ARMA', pAR = 1, qMA = 1)
dim(Y)
datat("copals_camera")
data("copals_camera")
dim(Y)
devtools::document()
library(MultiVarSel)
?variable_selection
data("copals_camera")
Y <- scale(Y[,1:200])
Frequencies <- variable_selection(Y = Y, X = X, nb_repli = 100, typeDep = 'ARMA', pAR = 1, qMA = 1)
devtools::document()
devtools::document()
library(MultiVarSel)
?variable_selection
data("copals_camera")
Y <- scale(Y[,1:100])
Frequencies <- variable_selection(Y = Y, X = X, nb_repli = 10, typeDep = 'ARMA', pAR = 1, qMA = 1)
?whitening_test
data(copals_camera)
Y=scale(Y[,1:100])
residuals=lm(as.matrix(Y)~X-1)$residuals
square_root_inv_hat_Sigma=whitening(residuals,"AR1",
pAR=1,qMA=0)
?whitening_choice
data(copals_camera)
Y=scale(Y[,1:100])
residuals=lm(as.matrix(Y)~X-1)$residuals
whitening_choice(residuals,c("AR1","nonparam","ARMA"),
pAR=1,qMA=1)
devtools::document()
library(MultiVarSel)
?variable_selection
data("copals_camera")
Y <- scale(Y[,1:100])
Frequencies <- variable_selection(Y = Y, X = X, nb_repli = 10, typeDep = "nonpram", pAR = 1, qMA = 1)
X
devtools::document()
library(MultiVarSel)
?variable_selection
data("copals_camera")
Y <- scale(Y[,1:100])
Frequencies <- variable_selection(Y = Y, grouup= group, nb_repli = 10, typeDep = "nonpram", pAR = 1, qMA = 1)
devtools::document()
library(MultiVarSel)
rm(list=ls())
library(MultiVarSel)
data("copals_camera")
Y <- scale(Y[,1:100])
Frequencies <- variable_selection(Y = Y, grouup= group, nb_repli = 10, typeDep = "nonpram", pAR = 1, qMA = 1)
?variable_selection
data("copals_camera")
Y <- scale(Y[,1:100])
Frequencies <- variable_selection(Y = Y, group= group, nb_repli = 10, typeDep = "nonpram", pAR = 1, qMA = 1)
source('~/MultiVarSel/R/variable_selection.R', echo=TRUE)
data("copals_camera")
Y <- scale(Y[,1:100])
Frequencies <- variable_selection(Y = Y, group= group, nb_repli = 10, typeDep = "nonpram", pAR = 1, qMA = 1)
class(Y)
dim(Y)
group
library(MultiVarSel)
# devtools::install_github("Marie-PerrotDockes/MultiVarSel")
library(MultiVarSel)
data("copals_camera")
Y <- scale(Y[,1:100])
Frequencies <- variable_selection(Y = Y, group= group, nb_repli = 10, typeDep = "nonpram", pAR = 1, qMA = 1)
Frequencies <- variable_selection(Y = Y, group = group, nb_repli = 100, typeDep = 'ARMA', pAR = 1, qMA = 1)
Frequencies <- variable_selection(Y = Y, group = group, nb_repli = 100, typeDep = 'nonparam', pAR = 1, qMA = 1)
devtools::document()
library(MultiVarSel)
rm(list=ls())
library(MultiVarSel)
data("copals_camera")
Y <- scale(Y[,1:100])
Frequencies <- variable_selection(Y = Y, group= group, nb_repli = 10, typeDep = "nonpram", pAR = 1, qMA = 1)
?variable_selection
data("copals_camera")
Y <- scale(Y[,1:100])
Frequencies <- variable_selection(Y = Y, group = group, nb_repli = 100, typeDep = 'ARMA', pAR = 1, qMA = 1)
require(parallel)
?lm
devtools::document()
library(MultiVarSel)
devtools::document()
rm(list=ls())
devtools::document()
library(MultiVarSel)
devtools::document()
library(MultiVarSel)
devtools::document()
library(MultiVarSel)
devtools::document()
library(MultiVarSel)
?variable_selection
system.time()
data("copals_camera")
Y <- scale(Y[,1:50])
system.time(Frequencies <- variable_selection(Y = Y, group = group,
nb_repli = 10, typeDep = 'AR1', pAR = 1, qMA = 0, nb.cores = 1))
X <- model.matrix( ~ group + 0)
X
library(MultiVarSel)
devtools::document()
library(MultiVarSel)
rm(list=ls())
library(MultiVarSel)
devtools::document()
library(MultiVarSel)
library(MultiVarSel)
install.packages('tinytex')
runif(10,1,2)
library(MultiVarSel)
knit_with_parameters('~/MultiVarSel/README.rmd')
