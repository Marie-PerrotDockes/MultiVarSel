setwd('/home/perrot-dockes/Documents/Enviromics/Bioinformatics_revision/figures_revision/data')

require(ggplot2)


######################
###ROC CURVE sPLSDA##
######################

plot_roc_curve <- function(file) {

  load(file)

  Lasso     <- cbind(data.frame(ROC_Lasso_no_whitening$ROC), "Lasso")
  ANOVA     <- cbind(data.frame(ROC_MANOVA$ROC)            , "ANOVA"  )
  AR1       <- cbind(data.frame(ROC_AR1$ROC)               , "AR1"     )
  NONPARAM  <- cbind(data.frame(ROC_nonparam$ROC)          , "Nonparam")
  ORACLE    <- cbind(data.frame(ROC_oracle$ROC)            , "Oracle"    )
  sPLSDA    <- cbind(data.frame(ROC_splsda$ROC)            , "sPLSDA"   )
  colnames(AR1)       <- c("FPR", "TPR", "Method")
  colnames(Lasso)     <- c("FPR", "TPR", "Method")
  colnames(ANOVA)     <- c("FPR", "TPR", "Method")
  colnames(NONPARAM)  <- c("FPR", "TPR", "Method")
  colnames(ORACLE)    <- c("FPR", "TPR", "Method")
  colnames(sPLSDA)    <- c("FPR", "TPR", "Method")

  data <- rbind(AR1, Lasso, ANOVA, NONPARAM, ORACLE,sPLSDA)
  data$Method <- factor(data$Method,levels=unique(data$Method)[c(2,3,1,4,5,6)])
  recup<-sapply(unique(data$Method),function(i){
    a<-which(data$Method==i)
    return(quantile(a,seq(0,1,0.1)))
  })

  p <- ggplot(data, aes(x=FPR, y=TPR, colour=Method, group=Method,shape=Method,size=Method)) + geom_line(size=0.2)  + theme_bw()+scale_color_grey(start=0,end=0.6)+
    geom_point(data=data[recup,])+scale_shape_manual(values=c(4,5,19,15,8,83))+scale_size_manual(values=c(1,1,1,1,1,1.5))+
    theme(legend.position=c(0.64, 0.15), text=element_text(size=7),legend.text=element_text(size=5),legend.key.size  =unit(0.2, 'cm'),
          legend.title = element_blank(),legend.margin=margin(t = -1, unit='lines'),plot.margin=grid::unit(c(0,0.2,0,-0.1), "mm"))+xlab('')+ylab('')+scale_x_continuous(breaks=c(0,0.25,0.50,0.75,1),labels=c(0,0.25,0.50,0.75,1))
  #scale_color_manual(values=c("#000000", "#0000CC", "#00CCFF","#66CC33","#FFCC33","#CC0000"))
  if(file!='ROC_AR1_SNR2_phi09_s03.RData') p<-p+theme(legend.position = 'none')
  ggsave(p,file=paste("/home/perrot-dockes/Documents/Enviromics/Bioinformatics_revision2/figures_revision/",gsub('RData','pdf',file),sep=''),
         width=1.55,height=1.5)

  return(p)
}
p<-plot_roc_curve('ROC_AR1_SNR1_phi07_s001.RData')
# ggsave(p,file="/home/perrot-dockes/Documents/Enviromics/Bioinformatics/figures/ROC_AR1_SNR1_phi07_s001.pdf",width=1.7,height=1.7)

p<-plot_roc_curve('ROC_AR1_SNR1_phi09_s001.RData')
print(plot_roc_curve('ROC_AR1_SNR1_phi07_s03.RData'))
print(plot_roc_curve('ROC_AR1_SNR1_phi09_s03.RData'))
print(plot_roc_curve('ROC_AR1_SNR2_phi07_s001.RData'))
print(plot_roc_curve('ROC_AR1_SNR2_phi09_s001.RData'))
print(plot_roc_curve('ROC_AR1_SNR2_phi07_s03.RData'))
print(plot_roc_curve('ROC_AR1_SNR2_phi09_s03.RData'))












######################
###PR CURVE sPLSDA##
######################

plot_pr_curve <- function(file) {

  load(file)
  N <- sum(res$B==0)
  P <- sum(res$B!=0)

  Lasso     <- cbind(data.frame(ROC_Lasso_no_whitening$ROC), "Lasso")
  ANOVA     <- cbind(data.frame(ROC_MANOVA$ROC)            , "ANOVA"  )
  AR1       <- cbind(data.frame(ROC_AR1$ROC)               , "AR1"     )
  NONPARAM  <- cbind(data.frame(ROC_nonparam$ROC)          , "Nonparam")
  ORACLE    <- cbind(data.frame(ROC_oracle$ROC)            , "Oracle"    )
  sPLSDA    <- cbind(data.frame(ROC_splsda$ROC)            , "sPLSDA"   )
  colnames(AR1)       <- c("FPR", "TPR", "Method")
  colnames(Lasso)     <- c("FPR", "TPR", "Method")
  colnames(ANOVA)     <- c("FPR", "TPR", "Method")
  colnames(NONPARAM)  <- c("FPR", "TPR", "Method")
  colnames(ORACLE)    <- c("FPR", "TPR", "Method")
  colnames(sPLSDA)    <- c("FPR", "TPR", "Method")

  data <- rbind(AR1, Lasso, ANOVA, NONPARAM, ORACLE,sPLSDA)
  data$Method <- factor(data$Method,levels=unique(data$Method)[c(2,3,1,4,5,6)])
  data$FP <-  data$FPR * N
  data$TP <- data$TPR * P
  data$Precision <- data$TP /(data$FP + data$TP )
  data$Recall <- data$TPR
  recup<-sapply(unique(data$Method),function(i){
    a<-which(data$Method==i)
    return(quantile(a,seq(0,1,0.1)))
  })

  p <- ggplot(data, aes(x=Recall, y=Precision, colour=Method, group=Method,shape=Method,size=Method)) + geom_line(size=0.2)  + theme_bw()+scale_color_grey(start=0,end=0.6)+
    geom_point(data=data[recup,])+scale_shape_manual(values=c(4,5,19,15,8,83))+scale_size_manual(values=c(1,1,1,1,1,1.5))+
    theme(legend.position=c(0.25, 0.15), text=element_text(size=7),legend.text=element_text(size=5),legend.key.size  =unit(0.2, 'cm'),
          legend.title = element_blank(),legend.margin=margin(t = -1, unit='lines'),plot.margin=grid::unit(c(0,0.2,0,-0.1), "mm"))+xlab('')+ylab('')+scale_x_continuous(breaks=c(0,0.25,0.50,0.75,1),labels=c(0,0.25,0.50,0.75,1))
  #scale_color_manual(values=c("#000000", "#0000CC", "#00CCFF","#66CC33","#FFCC33","#CC0000"))
  if(file!='ROC_AR1_SNR2_phi09_s03.RData') p<-p+theme(legend.position = 'none')
  ggsave(p,file=paste("/home/perrot-dockes/Documents/Enviromics/SAGMB/figures_revision/PR_",gsub('RData','pdf',file),sep=''),
         width=1.55,height=1.5)

  return(p)
}
p<-plot_pr_curve('ROC_AR1_SNR1_phi07_s001.RData')
# ggsave(p,file="/home/perrot-dockes/Documents/Enviromics/Bioinformatics/figures/ROC_AR1_SNR1_phi07_s001.pdf",width=1.7,height=1.7)

p<-plot_pr_curve('ROC_AR1_SNR1_phi09_s001.RData')
print(plot_pr_curve('ROC_AR1_SNR1_phi07_s03.RData'))
print(plot_pr_curve('ROC_AR1_SNR1_phi09_s03.RData'))
print(plot_pr_curve('ROC_AR1_SNR2_phi07_s001.RData'))
print(plot_pr_curve('ROC_AR1_SNR2_phi09_s001.RData'))
print(plot_pr_curve('ROC_AR1_SNR2_phi07_s03.RData'))
print(plot_pr_curve('ROC_AR1_SNR2_phi09_s03.RData'))










load('/home/perrot-dockes/Documents/Enviromics/Bioinformatics_revision2/figures_revision/Selon_nbrep.RData')
library(doBy)
library(ggplot2)
library(tidyverse)
library(reshape2)
Selon_repli <-  gather( Selon_repli , key='nb_rep',value='frequency',-`Names of the Columns of Y`,-`Levels of the qualitative variable`,
                                 -phi,-q,-theta,-SNR,-sparsity,-Real)
Selon_repli <- Selon_repli[Selon_repli$nb_rep!=500,]
TPRFPR<-function(Selon_repli,tresh=1){
  Sel <- ifelse(Selon_repli$frequency>=tresh,1,0)
  Selon_repli$TP<-  Sel*Selon_repli$Real
  Selon_repli$FP<-  Sel*(1-Selon_repli$Real)
  Selon_repli$FN<-  (1-Sel)*Selon_repli$Real
  Selon_repli$TN<-  (1-Sel)*(1-Selon_repli$Real)
  summaryBy(TP+FP+FN+TN~ q + phi + SNR + theta + sparsity + nb_rep,Selon_repli,FUN=sum)

}
Sm<-TPRFPR(Selon_repli)
Sm$treshold <-1
Sm2<-TPRFPR(Selon_repli,tresh=0.99)
Sm2$treshold <-0.99

Sm3<-TPRFPR(Selon_repli,tresh=0.9)
Sm3$treshold <-0.9

Sm<-rbind(Sm,Sm2,Sm3)

Sm$TPR<-Sm$TP.sum /(Sm$TP.sum+Sm$FN.sum)

Sm$FPR<-Sm$FP.sum /(Sm$FP.sum+Sm$TN.sum)
head(Sm)
Sm_m <-melt(Sm,id=c('q','phi' ,'SNR','theta', 'sparsity', 'nb_rep' ,'TP.sum', 'FP.sum' ,'FN.sum' ,'TN.sum','treshold'))
Sm_m$SNR<-paste('kappa==',Sm_m$SNR)
Sm_m$sparsity<-paste('s==',Sm_m$sparsity)
Sm_m$SNR<-factor(Sm_m$SNR,levels=c('kappa== 1','kappa== 2','kappa== 10'))
# p <- ggplot(data=Sm_m ,aes(x=nb_rep,y=value,color=variable,shape=as.character(SNR+phi)))+geom_point()+facet_grid(~sparsity)
p <- ggplot(data=Sm_m ,aes(x=as.character(treshold),shape=as.character(nb_rep),y=value,color=as.character(phi),size=as.character(phi)))+geom_point()+facet_grid(variable~sparsity+SNR,scale='free_y',labeller = label_parsed)
p <- p+theme_bw()+theme(legend.position='bottom',strip.background = element_rect(fill='white'),text=element_text(size=7),legend.margin=margin(t = -0.5,b=0,l=0,r=0, unit='lines'),panel.spacing = unit(0.1, "lines"),legend.key.size  =unit(0.1, 'cm'))+xlab('Threshold')+ylab('')+scale_color_manual(values=c('grey','black'),name=expression(phi[1]))+
  scale_shape_manual(name='N',values = c(16,17,15,3))+scale_size_manual(values=c(1.4,1),name=expression(phi[1]))

ggsave(p,file='/home/perrot-dockes/Documents/Enviromics/Bioinformatics_revision2/figures_revision/Comparaison_nb_rep.pdf',width=4,height=2.2)

### ABBACUS :
load("/home/perrot-dockes/Documents/Enviromics/Bioinformatics_revision2/figures_revision/Freqs_stabsel_1000.RData")

head(Freqs_stabsel)
hist(Freqs_stabsel$frequency)
sum(Freqs_stabsel$frequency==1)
sum(Freqs_stabsel$frequency>0.99)


Freqs_stabsel$Sel_1<- ifelse(Freqs_stabsel$frequency==1,1,0)
Freqs_stabsel$Sel_99<- ifelse(Freqs_stabsel$frequency>=0.99,1,0)
Sum_1 <- Freqs_stabsel %>%
  group_by(`Names of the Columns of Y`,`Levels of the qualitative variable` ) %>%
  summarise(Threshold1 = sum(Sel_1)/100,Threshold099=sum(Sel_99)/100, n = n(),Real=sum(Real))
Sum_1$Real <-ifelse(Sum_1$Real==0,0,1)
Sum_m <- melt (Sum_1,id=c("Names of the Columns of Y","Levels of the qualitative variable" ,"n" ))

Sum_m<-rbind(Sum_m,Sum_m[Sum_m$variable=='Real',])
Sum_m$Type<- rep(rep(c('Threshold=1','Threshold=0.99'),each=3000),2)
Sum_m$variable<-ifelse(grepl('Threshold',Sum_m$variable),'Predicted','Real')
Sum_m$`Levels of the qualitative variable`<-as.character(as.numeric(Sum_m$`Levels of the qualitative variable`))
p <- ggplot(data=Sum_m[Sum_m$value!=0,],aes(x=as.numeric(as.character(`Names of the Columns of Y`)),
                                            y=`Levels of the qualitative variable`,size=value,shape=variable,color=variable))+geom_point()
p <- p + scale_size(trans="exp",breaks=c(0.25,0.50,0.75,1),range=c(0,1),name='') + scale_shape_manual(values=c(19,3),name='')+scale_color_manual(values=c('black','grey70'),name='')
p <- p +facet_grid(.~Type)
p<-p+theme_bw()+theme(strip.background = element_rect(fill='white'),legend.position = 'bottom',text=element_text(size=7),panel.spacing = unit(0.8, "lines"),legend.key.size  =unit(0.1, 'cm'),
                      legend.margin=margin(t = -0.5,b=0,l=0,r=0, unit='lines'),legend.spacing.x=unit(0.1, 'cm'))+xlab("Position")+ylab('Condition')

ggsave(p,file='/home/perrot-dockes/Documents/Enviromics/Bioinformatics_revision2/figures_revision/abbacus_before_stab_sel.pdf',width=3,height=1.5)


## Frequence hiostopgramme

load('Frequence_raw.RData')
load("Frequence_stabsel_before_sigma.RData")

Frequencies$Type<-'MultiVarSel'
Frequencies_raw$Type<-'Raw'
Freqs<-rbind(Frequencies,Frequencies_raw)

p<-ggplot(data = Freqs,aes(x = frequency,color=Type,fill=Type))+geom_density(alpha=0.5)+theme_bw()
p<-ggplot(data = Freqs,aes(x = frequency,color=Type,fill=Type))+geom_histogram(position="identity",alpha=0.2,bins=100)+theme_bw()

ggsave(p,file='histogramm_freq.pdf')


# rm(list=ls())
library(ggplot2)
library(reshape2)
library(Matrix)
# setwd("/home/perrot-dockes/Documents/Enviromics/Bioinformatics/DoPlots")



########################
####Computing Time ####
########################
load('Mean_on10_replication_times_.RData')
Teps$Nb <- as.character(Teps$nb_repli)
Teps$Nb<-factor(Teps$Nb,levels = c(100,500,1000,5000))
p<-ggplot(data=Teps,aes(x=q,y=Times.mean,color=Nb,shape=Nb))+geom_line()+geom_point(size=1)
p<-p+theme_bw(base_size=7)+scale_colour_grey(name='N',start=0,end=0.6)+
  scale_shape_manual(values=c(19,17,15,8),name='N')
p<-p+ylab('Times in seconds')
ggsave(p,file='/home/perrot-dockes/Documents/Enviromics/Bioinformatics_revision/figures_revision/temp_computing5000.pdf',width=3.6,height=2)




load('our_cov_E_newcalc_SNR0512_sampres.RData')
#
head(A)
#
A$TPR <- as.numeric(as.character(A$TPR))

A$FPR <- as.numeric(as.character(A$FPR))

library(dplyr)

# Good_support_mean <-
A_mean <-A %>%
  group_by('Type','SNR ','sparsity','lambda')    %>% summarise(TPR=mean(TPR),FPR=mean(FPR))
#
library(doBy)
A_mean <-summaryBy(TPR+FPR~ Type +SNR +sparsity +lambda,data=A)
A_mean<-A_mean[A_mean$SNR!=2 & A_mean$sparsity!=0.001,]
A_mean$sparsity<-paste('s==',A_mean$sparsity,sep='')
A_mean$SNR<-paste('kappa==',A_mean$SNR,sep='')
# # # head(A_mean)
library(ggplot2)
# #
p <-ggplot(data=A_mean,aes(x=FPR.mean,y=TPR.mean,color=Type))+geom_line()
p<-p+facet_grid(SNR~sparsity,labeller = label_parsed)+theme_bw()+theme(strip.background = element_rect(fill='white'))
p<-p+theme(text=element_text(size=7),legend.position = 'bottom',legend.margin=margin(t = -0.5,b=0,l=0,r=0, unit='lines'),legend.spacing.x=unit(0.1, 'cm'))+xlab('FPR')+ylab('TPR')

ggsave(p,file='/home/perrot-dockes/Documents/Enviromics/Bioinformatics_revision/figures_revision/ROC_curve_ourE.pdf',width=3.6,height=3.6)

# load('Frequence_real_w_cv_sc.RData')
# source('stab_sel_before_sigma.R')
# T1<- New_stab_sel_anova (group=X2,Y,nb_repli=1000,nb.cores=5)
#
# save('T1',file='/home/perrot-dockes/Documents/Enviromics/Bioinformatics_revision2/Frequence_doubleloop.RData')
load("/home/perrot-dockes/Documents/Enviromics/Bioinformatics_revision2/Frequence_doubleloop.RData")
Frequencies <- T1
Frequencies$Names_of_X<-gsub('group','',Frequencies$`Levels of the qualitative variable`)
 Frequencies$Names_of_Y<-as.numeric(gsub('X','',gsub('\\.1$','', Frequencies$`Names of the Columns of Y`)))

p<-ggplot(data=Frequencies[Frequencies$frequency>=0.999,],
                      aes(x=Names_of_Y,y=Names_of_X,color=Names_of_X,fill=Names_of_X))+
             geom_tile(size=0.75)+theme_bw()
ggsave(p,file='/home/perrot-dockes/Documents/Enviromics/Bioinformatics_revision2/figures_revision/positionmetab_modal.pdf')

library(VennDiagram)
Cols <-gray.colors(3, start = 0, end = 0.7)


library(VennDiagram)
temp<-venn.diagram(list(TE=Frequencies$`Names of the Columns of Y`[Frequencies$frequency>=0.999& Frequencies$Names_of_X=="Class 0"],
                  CE=Frequencies$`Names of the Columns of Y`[Frequencies$frequency>=0.999 & Frequencies$Names_of_X=="East"],
                  CW=Frequencies$`Names of the Columns of Y`[Frequencies$frequency>=0.999 & Frequencies$Names_of_X=="West"]),
             filename=NULL,
             fill = Cols
             , alpha = rep(0.5,3),width=5,height=5,units='cm',cat.just=list(c(0.5,0.5),c(0.5,0.5),c(0.5,0.4)),cex=0.5,cat.cex=0.5,lwd=0.5)



library(grDevices)

pdf(file="/home/perrot-dockes/Documents/Enviromics/Bioinformatics_revision2/figures_revision/ven_our_classes.pdf",width=1,height=1)
grid.draw(temp)
dev.off()


Meta <-unique(Frequencies$`Names of the Columns of Y`)
Type <-sapply(Meta,function(i){paste(Frequencies$Names_of_X[Frequencies$`Names of the Columns of Y`==i & Frequencies$frequency>=0.999],collapse='&')})

Base<-cbind.data.frame(Meta,Type)
p<-ggplot(data=Base[Base$Type!='',],aes(x=as.numeric(Meta),fill=Type,color=Type,y=Type))+geom_tile()
ggsave(p,file='/home/perrot-dockes/Documents/Enviromics/Bioinformatics_revision2/figures_revision/positionmetab_type.pdf')


## Compariaosn sPLSDa
library(mixOmics)
# load('stab_sel5000.RData')
 load('copals_data.RData')


X2<-as.character(X2)
X2[X2=='Class 0']<-'TE'
X2[X2=='West']<-'CW'
X2[X2=='East']<-'CE'
X2<-as.factor(X2)

mod2<-splsda(X=Y,
             Y=X2,keepX = c(80,80),
             ncomp = 2)
##
var_sel1comp<-rownames(mod2$loadings$X)[mod2$loadings$X[,1]!=0]
var_sel2comp<-rownames(mod2$loadings$X)[mod2$loadings$X[,2]!=0]


## on les mets au meme format que nous

Nous <- Frequencies[Frequencies$frequency>=0.999,]

sPLSDA<-cbind.data.frame(`Names of the Columns of Y`=c(var_sel1comp,var_sel2comp),`Levels of the qualitative variable`=c(rep('Comp1',80),rep('Comp2',80)),
                         frequency=1, Names_of_X=c(rep('Comp1',80),rep('Comp2',80)),Names_of_Y=as.numeric(gsub('X','',gsub('\\.1$','', c(var_sel1comp,var_sel2comp)))),
                         Type='sPLSDA'

                         )
Nous$Type<-'MultiVarSel'
Nous$Names_of_X<-ifelse(Nous$Names_of_X=="Class 0",'TE',ifelse(Nous$Names_of_X=="West",'CW','CE'))
Base<-rbind(sPLSDA,Nous)


p<-ggplot(data=Base,aes(y=Names_of_Y,x=Type,color=Names_of_X,shape=Names_of_X))+geom_point(size=0.2,position=position_dodge(width=0.4))
p<-p+theme_bw()+coord_flip()+xlab('')+ylab('m/z')+theme(legend.title=element_blank(),text=element_text(size=7),legend.key.size  =unit(0.2, 'cm'))
p<-p+scale_shape_manual(values = c(15,19,15,17,19))
ggsave(p,file='/home/perrot-dockes/Documents/Enviromics/Bioinformatics_revision2/figures_revision/position_metab_selected.eps',width=2.9,height=1.2)

p<-ggplot(data=Base,aes(x=Names_of_Y,color=Names_of_X,shape=Names_of_X,fill=Names_of_X))+geom_density(alpha=0.3)
p<-p+theme_bw()+xlab('')+ylab('m/z')+theme(legend.title=element_blank(),text=element_text(size=7),legend.key.size  =unit(0.2, 'cm'))+facet_grid(Type~.)

p<-ggplot(data=Base[Base$Type=='sPLSDA',],aes(x=Names_of_Y,color=Names_of_X,shape=Names_of_X))+stat_density(position="identity",geom="line")
p<-p+theme_bw()+xlab('')+xlab('m/z')+theme(strip.background=element_rect(fill='white'),legend.background = element_blank(),
                                           legend.key = element_blank(),legend.position = c(0.15, 0.80),legend.title=element_blank(),text=element_text(size=7),legend.key.size  =unit(0.2, 'cm'))+facet_grid(Type~.)
p<-p+scale_color_grey()+geom_rug()

p2<-ggplot(data=Base[Base$Type=='MultiVarSel',],aes(x=Names_of_Y,color=Names_of_X,shape=Names_of_X))+stat_density(position="identity",geom="line")
p2<-p2+theme_bw()+xlab('')+xlab('m/z')+theme(strip.background=element_rect(fill='white'),legend.position = c(0.15, 0.80),legend.background = element_blank(),
                                             legend.key = element_blank(),legend.title=element_blank(),text=element_text(size=7),legend.key.size  =unit(0.2, 'cm'))+facet_grid(Type~.)
p2<-p2+scale_color_grey()+geom_rug()


library(gridExtra)

p<-arrangeGrob(p,p2)

ggsave(p,file='/home/perrot-dockes/Documents/Enviromics/Bioinformatics_revision2/figures_revision/density_metab_selected.eps',width=2.9,height=2.4)


##VEnn diagram
seuil <-0.999
Cols <-gray.colors(5, start = 0, end = 0.7)

venn.diagram(list(TE=Frequencies$`Names of the Columns of Y`[Frequencies$frequency>=seuil& Frequencies$Names_of_X=="Class 0"],
                  CE=Frequencies$`Names of the Columns of Y`[Frequencies$frequency>=seuil & Frequencies$Names_of_X=="East"],
                  CW=Frequencies$`Names of the Columns of Y`[Frequencies$frequency>=seuil & Frequencies$Names_of_X=="West"],
                  Comp1 = var_sel1comp,
                  Comp2=var_sel2comp),
             filename='/home/perrot-dockes/Documents/Enviromics/Bioinformatics_revision2/figures_revision/ven_our_classes_splsda.eps',
             fill = Cols, alpha = rep(0.5,5))


Cols <-gray.colors(3, start = 0, end = 0.7)

temp<-venn.diagram(list(TE=Frequencies$`Names of the Columns of Y`[Frequencies$frequency>=seuil& Frequencies$Names_of_X=="Class 0"],
                  # CE=Frequencies$`Names of the Columns of Y`[Frequencies$frequency>=1 & Frequencies$Names_of_X=="East"],
                  # CW=Frequencies$`Names of the Columns of Y`[Frequencies$frequency>=1 & Frequencies$Names_of_X=="West"],
                  Comp1 = var_sel1comp,
                  Comp2=var_sel2comp),
             filename=NULL,
             fill = Cols, alpha = rep(0.5,3),width=7,height=7,units='cm',cat.just=list(c(1.5,-0.5),c(.5,-9),c(-0.3,-1)),cat.cex=0.5,cex=0.5)
pdf(file="/home/perrot-dockes/Documents/Enviromics/Bioinformatics_revision2/figures_revision/ven_TE_splsda.pdf",width=1,height=1)
grid.draw(temp)
dev.off()
temp <-venn.diagram(list(#TE=Frequencies$`Names of the Columns of Y`[Frequencies$frequency==1& Frequencies$Names_of_X=="Class 0"],
                   CE=Frequencies$`Names of the Columns of Y`[Frequencies$frequency>=seuil & Frequencies$Names_of_X=="East"],
                  # CW=Frequencies$`Names of the Columns of Y`[Frequencies$frequency>=1 & Frequencies$Names_of_X=="West"],
                  Comp1 = var_sel1comp,
                  Comp2=var_sel2comp),
             filename=NULL,
             fill =Cols, alpha = rep(0.5,3),width=7,height=7,units='cm',cat.just=list(c(-0.5,0),c(1.5,-0.5),c(0,1.1)),cat.cex=0.5,cex=0.5)
pdf(file="/home/perrot-dockes/Documents/Enviromics/Bioinformatics_revision2/figures_revision/ven_CE_splsda.pdf",width=1,height=1)
grid.draw(temp)
dev.off()
temp <-venn.diagram(list(#TE=Frequencies$`Names of the Columns of Y`[Frequencies$frequency==1& Frequencies$Names_of_X=="Class 0"],
  #CE=Frequencies$`Names of the Columns of Y`[Frequencies$frequency>=1 & Frequencies$Names_of_X=="East"],
   CW=Frequencies$`Names of the Columns of Y`[Frequencies$frequency>=seuil & Frequencies$Names_of_X=="West"],
  Comp1 = var_sel1comp,
  Comp2=var_sel2comp),
  filename=NULL,
  fill = Cols, alpha = rep(0.5,3),width=7,height=7,units='cm',cat.just=list(c(1.5,-0.5),c(.5,-9),c(-0.3,-1)),cat.cex=0.5,cex=0.5)

pdf(file="/home/perrot-dockes/Documents/Enviromics/Bioinformatics_revision2/figures_revision/ven_CW_splsda.pdf",width=1,height=1)
grid.draw(temp)
dev.off()

##Courbe ROC E :
load('our_cov_E_newcalc_SNR0512_sampres_sc2.RData')
# A<-rbind(A,A4)
# A<-A4
A$TPR <- as.numeric(as.character(A$TPR))
A$FPR <- as.numeric(as.character(A$FPR))


library(doBy)
A_mean <-summaryBy(TPR+FPR~ Type +SNR +sparsity +lambda,data=A)
# # # head(A_mean)
library(ggplot2)
# #
A_mean$sparsity<-paste('s==',A_mean$sparsity)
A_mean$SNR<-paste('kappa==',A_mean$SNR)
A_mean$Type<-factor(A_mean$Type,levels=c('MultiVarSel','Lasso','sPLSDA'))


A_mean <- A_mean[A_mean$sparsity=='s== 0.01',]
recup<-sapply(unique(A_mean$Type),function(i){
  a<-which(A_mean$Type==i)
  return(quantile(a,seq(0,1,0.1)))
})
p <-ggplot(data=A_mean[A_mean$Type!='ANOVA',],aes(x=FPR.mean,y=TPR.mean,color=Type))+geom_line(size=0.1)
p<-p+facet_grid(sparsity~SNR,labeller = label_parsed)+theme_bw()+theme(strip.background = element_rect(fill='white'))
p<-p+theme(text=element_text(size=7),legend.position = 'bottom',legend.margin=margin(t = -0.5,b=0,l=0,r=0, unit='lines')
)+xlab('FPR')+ylab('TPR')+scale_color_grey(start=0,end=0.7,name='')+geom_point(data=A_mean[recup,],aes(shape=Type,size=Type))+
  scale_shape_manual(values=c(15,4,83),name='')
p<-p+scale_x_continuous(breaks = c(0,0.25,0.5,0.75,1),labels =c('0','0.25','0.5','0.75','1'))+scale_size_manual(values=c(1,1,1.5),name='')
ggsave(p,file='/home/perrot-dockes/Documents/Enviromics/Bioinformatics_revision/figures_revision/our_covE.pdf',width=3.6,height=2.1)



## Spectrum

raw_data <- read.table(file = '/home/perrot-dockes/Documents/Enviromics/Code/paper_metabolomics/data_copals.csv',sep=',', header=TRUE)
dim(raw_data)
head(raw_data)
colnames(raw_data[,1:10])
camera  <- read.table(file = '/home/perrot-dockes/Documents/Enviromics/Code/paper_metabolomics/data_copals_camera.csv',sep=';', header=TRUE)
dim(camera)
par(mfrow=c(3,1))
acf(as.numeric(raw_data[1,-c(1:4)]),lag.max =30)
acf(as.numeric(camera[1,-c(1:4)]),lag.max =30)
acf(scale(as.numeric(camera[1,-c(1:4)])),lag.max =30)

raw_data$Include



Data <- rbind.data.frame(
                         cbind.data.frame(Value = as.numeric(camera[2,-c(1:4)]),
                                          m = as.numeric(gsub('X','',colnames(camera[,-c(1:4)]))),
                                          Type='Camera' ,stringsAsFactors=FALSE),
                         cbind.data.frame(Value = as.numeric(scale(camera[,-c(1:4)])[2,]),
                                          m = as.numeric(gsub('X','',colnames(camera[,-c(1:4)]))),
                                          Type='Scale Camera' ,stringsAsFactors=FALSE))

Data$Type <- factor(Data$Type, levels= c('Raw', 'Camera', 'Scale Camera'))

p <- ggplot(data = Data, aes(x = m, y = Value))+ geom_line(size=0.1)+ theme_bw()+ facet_grid(Type~., scales='free_y')
p <- p + theme(strip.background = element_blank(), strip.text = element_blank(),text=element_text(size=7))+xlab('m/z')+ylab('')

# par(mfrow=c(1,1))
# acf(as.numeric(camera[2,-c(1:4)]), lag.max =30, main= '')

ggsave(p, file= '/home/perrot-dockes/Documents/Enviromics/SAGMB/figures_revision/spectrum.pdf',
       width=5,height=3)


require(forecast)

bip <-function (x, plot.type = c("partial", "histogram", "scatter",
                                 "spectrum", "ACF"), points = TRUE, smooth = FALSE, lag.max, na.action = na.contiguous,
                theme = NULL, ...)
{
  if (!requireNamespace("ggplot2", quietly = TRUE)) {
    stop("ggplot2 is needed for this function to work. Install it via install.packages(\"ggplot2\")",
         call. = FALSE)
  }
  else if (!requireNamespace("grid", quietly = TRUE)) {
    stop("grid is needed for this function to work. Install it via install.packages(\"grid\")",
         call. = FALSE)
  }
  else {
    if (NCOL(x) > 1)
      stop("ggtsdisplay is only for univariate time series")
    plot.type <- match.arg(plot.type)
    main <- deparse(substitute(x))
    if (!is.ts(x)) {
      x <- ts(x)
    }
    if (missing(lag.max)) {
      lag.max <- round(min(max(10 * log10(length(x)), 3 *
                                 frequency(x)), length(x)/3))
    }
    dots <- list(...)
    if (is.null(dots$xlab))
      dots$xlab <- ""
    if (is.null(dots$ylab))
      dots$ylab <- ""
    labs <- match(c("xlab", "ylab", "main"), names(dots),
                  nomatch = 0)
    gridlayout <- matrix(c(1, 2, 1, 3), nrow = 2)
    grid::grid.newpage()
    grid::pushViewport(grid::viewport(layout = grid::grid.layout(nrow(gridlayout),
                                                                 ncol(gridlayout))))
    matchidx <- as.data.frame(which(gridlayout == 1, arr.ind = TRUE))
    tsplot <- do.call(ggplot2::autoplot, c(object = quote(x),
                                           dots[labs]))
    if (points) {
      tsplot <- tsplot + ggplot2::geom_point(size = 0.5)
    }
    if (smooth) {
      tsplot <- tsplot + ggplot2::geom_smooth(method = "loess",
                                              se = FALSE)
    }
    if (is.null(tsplot$labels$title)) {
      tsplot <- tsplot + ggplot2::ggtitle(main)
    }
    if (!is.null(theme)) {
      tsplot <- tsplot + theme
    }
    print(tsplot, vp = grid::viewport(layout.pos.row = matchidx$row,
                                      layout.pos.col = matchidx$col))
    acfplot <- do.call(ggAcf, c(x = quote(x), lag.max = lag.max,
                                na.action = na.action, dots[-labs])) + ggplot2::ggtitle(NULL)
    if (!is.null(theme)) {
      acfplot <- acfplot + theme
    }
    if (plot.type == "partial") {
      lastplot <- ggPacf(x, lag.max = lag.max, na.action = na.action) +
        ggplot2::ggtitle(NULL)
      acfplotrange <- ggplot2::layer_scales(acfplot)$y$range$range
      pacfplotrange <- ggplot2::layer_scales(lastplot)$y$range$range
      yrange <- range(c(acfplotrange, pacfplotrange))
      acfplot <- acfplot + ggplot2::ylim(yrange)
      lastplot <- lastplot + ggplot2::ylim(yrange)
    }
    else if (plot.type == "histogram") {
      lastplot <- gghistogram(x, add.normal = TRUE, add.rug = TRUE) +
        ggplot2::xlab(main)
    }
    else if (plot.type == "scatter") {
      scatterData <- data.frame(y = x[2:NROW(x)], x = x[1:NROW(x) -
                                                          1])
      lastplot <- ggplot2::ggplot(ggplot2::aes_(y = ~y,
                                                x = ~x), data = scatterData) + ggplot2::geom_point() +
        ggplot2::labs(x = expression(Y[t - 1]), y = expression(Y[t]))
    }
    else if (plot.type == "spectrum") {
      specData <- spec.ar(x, plot = FALSE)
      specData <- data.frame(spectrum = specData$spec,
                             frequency = specData$freq)
      lastplot <- ggplot2::ggplot(ggplot2::aes_(y = ~spectrum,
                                                x = ~frequency), data = specData) + ggplot2::geom_line() +
        ggplot2::scale_y_log10()
    }
    else if (plot.type == "ACF") {

      lastplot <- acfplot
    }
    if (!is.null(theme)) {
      lastplot <- lastplot + theme
    }
    matchidx <- as.data.frame(which(gridlayout == 2, arr.ind = TRUE))
    print(acfplot, vp = grid::viewport(layout.pos.row = matchidx$row,
                                       layout.pos.col = matchidx$col))
    matchidx <- as.data.frame(which(gridlayout == 3, arr.ind = TRUE))
    print(lastplot, vp = grid::viewport(layout.pos.row = matchidx$row,
                                        layout.pos.col = matchidx$col))
  }
}

p1<-bip(as.numeric(scale(camera[,-c(1:4)])[2,]),plot.type ='ACF')$plot
acf(as.numeric(scale(camera[,-c(1:4)])[2,]), lag.max =30, main= '')
p1 <- p1+ theme_bw()
p1 <- p1 + theme(strip.background = element_blank(),
               strip.text = element_blank(),
               text=element_text(size=7))

require(gridExtra)


plt <- arrangeGrob(p,p1,heights =c(2,1))


ggsave(plt, file= '/home/perrot-dockes/Documents/Enviromics/SAGMB/figures_revision/acf_spectrum.pdf',
       width=5,height=4.5)

